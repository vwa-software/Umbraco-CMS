@inherits AmaziliaViewPageOfTContent<AsyncResultModel<SelectionState>>
@using Umbraco.Web;
@using VWA.Models;
@using Amazilia.Web.Mvc;
@using Amazilia.Web.Extentions;

@{
    /**/
    IPublishedContent categoryContent = null;

    var children = this.ProductService.GetContentIdsWithFilterId(Model.Model.CategoryId, true).ToArray();
    IEnumerable<IPublishedContent> products = Umbraco.Content(children);
    products = products.Where(a => a.IsVisible());

    if (Model.Model.CategoryId > 0)
    {
        categoryContent = Umbraco.Content(Model.Model.CategoryId);
    }

}

@if (products.Count() == 0)
{
    var root = Umbraco.ContentAtRoot().FirstOrDefault();
    var orderingnode = root.Children("Ordering").FirstOrDefault();

    <div class="empty">@Html.Raw(orderingnode.GetPropertyValue<string>("emptyArticlesMessage"))</div>
}

@if (categoryContent != null &&  categoryContent.HasValue("bodyText"))
{
    
        @Html.GetGridHtml(categoryContent.GetProperty("bodyText"), "bootstrap4")
    
}


@foreach (var item in products)
{
    var amzProduct = ProductService.GetProductByContent(item);
    var preparationMethods = item.GetPropertyValue<IEnumerable<IPublishedContent>>("Product_preparationMethods");

    <article class="product id_@item.Id">
        <div class="row">
            <div class="col-md-3">
                @if (item.HasValue("photos"))
                {
                    var img = item.GetPropertyValue<IEnumerable<IPublishedContent>>("photos").FirstOrDefault();

                    <img src="@(Url.GetCropUrl(img, "List"))" />
                }
            </div>
            <div class="col-md-6"><h5>@item.Name</h5><p>@(item.GetPropertyValue<string>("description"))</p></div>
            <div class="col-md-3 text-right">
                @amzProduct.Price(1).FormatPriceInclTax()

                @if (preparationMethods.Count() > 0)
                {
                    <div class="product-button input-group-btn">
                        <button class="btn btn-success">Kies saus</button>
                    </div>
                }
            </div>
        </div>
        @if (preparationMethods.Count() > 0)
        {
            <div class="preparation-methods">
                <div class="text-center expand"><span class="icon-round icon-down-open icon-product-expand"></span></div>
                <div class="collapsable">
                    <div class="row ">
                        @foreach (var preperationMethod in preparationMethods)
                        {
                            var amzPreparationMethod = ProductService.GetProductByContent(preperationMethod);

                            <div class="col-lg-4 col-6 preparation-method id-@preperationMethod.Id" data-id="@preperationMethod.Id">
                                <div class="preparation-method-tile prep-addtodish">
                                    <div class="quantity">
                                        <div class="number-spinner">
                                            <span class="min">-</span>
                                            <input type="text" id="listquantity@(item.Id)_@(preperationMethod.Id)" class="spinner" value="1" />
                                            <span class="plus">+</span>
                                        </div>
                                    </div>
                                    <div class="sub-tile">
                                        <span class="caption">@preperationMethod.Name</span>
                                        <span class="float-right">@amzPreparationMethod.Price(1).FormatPriceInclTax()</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="add-basket-wrap add-quantity-wrap">
                        <div class="quantity">
                            <div class="number-spinner">
                                <span class="min">-</span>
                                <input type="text" id="listquantity@(item.Id)" class="spinner" value="1" />
                                <span class="plus">+</span>
                            </div>
                        </div>
                        <button class="btn btn-success addtocart" data-id="@item.Id">Toevoegen</button>
                    </div>
                </div>

            </div>
        }
        else
        {
            <div class="add-basket-wrap add-quantity-wrap">
                <div class="quantity">
                    <div class="number-spinner">
                        <span class="min">-</span>
                        <input type="text" id="listquantity@(item.Id)" class="spinner" value="1" />
                        <span class="plus">+</span>
                    </div>
                </div>
                <button class="btn btn-success addtocart" data-id="@item.Id">Toevoegen</button>
            </div>
        }
    </article>
}


