@inherits AmaziliaViewPageOfTContent<Amazilia.Web.Models.Common.AddresEditModel>
@using Amazilia.Web.Mvc;

@{
    var editAddress = Model.EditAddress;
    if (!Amazilia.Web.AmaziliaContext.Current.CurrentCustomer.Anonymous)
    {
        editAddress.Email = Amazilia.Web.AmaziliaContext.Current.CurrentCustomer.Email;
    }

    /*
    form jquery client validation
    https://exceptionnotfound.net/asp-net-mvc-demystified-unobtrusive-validation/

    For now the required/maxlength attributes are set in the AddresEditModel.
    The ultimite goal is to create some kind of management around it like the umbraco forms.
    */

    // HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    // HtmlHelper.ClientValidationEnabled = true;
}

<div>
    @Html.HiddenFor(model => model.EditAddress.Id)
</div>

<div class="edit-address form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.FirstName, Umbraco.GetDictionaryValue("FirstName"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.EditAddress.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.FirstName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.LastName, Umbraco.GetDictionaryValue("LastName"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.EditAddress.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.LastName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.Email, Umbraco.GetDictionaryValue("Email"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.EditAddress.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.Company, Umbraco.GetDictionaryValue("Company"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.EditorFor(model => model.EditAddress.Company, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.Company)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.CountryId, Umbraco.GetDictionaryValue("Country"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.DropDownListFor(model => model.EditAddress.CountryId, Model.Countries, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EditAddress.CountryId)
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.c, Umbraco.GetDictionaryValue("LastName"), new { @class = "col-md-4" })
            @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            @Html.ValidationMessageFor(model => model.StateProvinceId)*@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.City, Umbraco.GetDictionaryValue("City"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.EditorFor(model => model.EditAddress.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.City)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.Address1, Umbraco.GetDictionaryValue("Address1"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.EditorFor(model => model.EditAddress.Address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.Address1)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.Address2, Umbraco.GetDictionaryValue("Address2"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.EditorFor(model => model.EditAddress.Address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.Address2)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.ZipPostalCode, Umbraco.GetDictionaryValue("ZipPostalCode"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">

            @Html.EditorFor(model => model.EditAddress.ZipPostalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.ZipPostalCode)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.PhoneNumber, Umbraco.GetDictionaryValue("PhoneNumber"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.EditAddress.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.PhoneNumber)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EditAddress.FaxNumber, Umbraco.GetDictionaryValue("FaxNumber"), new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.EditAddress.FaxNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EditAddress.FaxNumber)
        </div>
    </div>

    <div class="formgroup text-right">
        <span class="col-md-3"></span>
        <button type="submit" name="SaveAddress" class="btn btn-primary text-right">Save address</button>
    </div>

</div>
