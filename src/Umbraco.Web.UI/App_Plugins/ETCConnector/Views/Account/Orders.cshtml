@model List<ETC.Connector.Model.ETC.HKLivingOrder>
@using ETC.B2B.WEB

@{
	var paging = new Paging(10);
	paging.CalculatePages(Model.Count);
	var sortedList = Model.OrderBy(a => a.Date).Skip((int)paging.Skip).Take(paging.Take).ToList();
}

@if (Model.Count == 0)
{
	<div style="font-size:12px; padding:10px 10px 10px 0px;"><blockquote>no orders found</blockquote></div>
}
else
{
	<div class="row invoice head">
		<div class="col-md-4">
			order number
		</div>
		<div class="col-md-2">
			order date
		</div>
		<div class="col-md-2">
			delivery date
		</div>
		<div class="col-md-2">
			total
		</div>
		<div class="col-md-2 invoicepdf">
			<i class="fas fa-file-pdf"></i>
		</div>
	</div>

	foreach (var order in sortedList)
	{
		<div id="wrapper-acc" class="accordionButton">
			<div class="row invoice acc">
				<div class="col-md-4 ordernr">
					@order.OrderNr
				</div>
				<div class="col-md-2 orderdate">
					@order.Date.ToShortDateString()
				</div>
				<div class="col-md-2 deliverydate">
					@order.Delivery.ToShortDateString()
				</div>
				<div class="col-md-2 ordertotal">
					@order.Total.ToString("C")
					
				</div>
				<div class="col-md-2 invoicepdf">
					@if (!string.IsNullOrWhiteSpace(order.PathToPdf))
					{
						<a href="@order.PathToPdf"><i class="fas fa-file-pdf"></i></a>
					}
					<i class="fas fa-sort-down sort"></i>
				</div>
			</div>
		</div>
		<div class="invoiceitemswrapper accordionContent">
			@if (order.HKLivingOrderItems.Count > 0)
			{
				<div class="row invoiceitem head">
					<div class="col-md-2">
						article number
					</div>
					<div class="col-md-4">
						name
					</div>
					<div class="col-md-4">
						amount
					</div>
					<div class="col-md-2">
						price
					</div>
				</div>
				foreach (var orderItem in order.HKLivingOrderItems)
				{
					<div class="row invoiceitem">
						<div class="col-md-2 invoice">
							@orderItem.Code
						</div>
						<div class="col-md-4 idescription">
							@orderItem.Description
						</div>
						<div class="col-md-4 iamount">
							@orderItem.Quantity.ToString("0.##")
						</div>
						<div class="col-md-2 iprice">
							@((orderItem.TotalPriceEx + orderItem.TotalPriceVAT).ToString("C"))
						</div>
					</div>
				}
			}
			else
			{
				<div class="empty">
					No order line items available
				</div>
			}
		</div>
	}

	if (paging.TotalPages > 1)
	{
		//Paging



		<div class="row row col-12 pagination" style="margin:20px 0px 0px 0px">
			<nav aria-label="Page navigation" class="hk_pagination">
				<ul class="pagination">
					@RenderPaging(paging, paging.CurrentPage)
				</ul>
			</nav>
		</div>
	}

}


@helper RenderPaging(Paging paging, long currentId)
{
	/**/

	<li class="page-item"><a class="@(paging.CurrentPage > 1 ? "" : "disabled") fas fa-step-backward" @(paging.CurrentPage > 1 ? "href=?page=" + paging.PreviousPage : "disabled")>&nbsp;</a></li>

	if (paging.StartPageToShow > 1)
	{
		<li class="page-item"><a href="?page=1">1..</a><text>&nbsp;</text></li>
	}

	for (var i = paging.StartPageToShow; i <= paging.EndPageToShow; i++)
	{
		if (paging.CurrentPage == i)
		{
			<span><span>@i</span></span>
		}
		else
		{
			<li class="page-item"><a href="?page=@i">@i</a><text>&nbsp;</text></li>
		}
	}


	if (paging.EndPageToShow < paging.TotalPages)
	{
		<li class="page-item"><a href="?page=@paging.TotalPages">...@paging.TotalPages</a><text>&nbsp;</text></li>
	}


	<li class="page-item"><a class="@(paging.CurrentPage < paging.TotalPages ? "" : "disabled") fas fa-step-forward" @(paging.CurrentPage < paging.TotalPages ? "href=?page=" + paging.NextPage : "disabled")>&nbsp;</a></li>

}
